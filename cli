#!/usr/bin/php
<?php
/***********************************
 *             Gab PHP             *
 *                                 *
 * A light php framework for study *
 *                                 *
 *             Gabriel             *
 *  <https://github.com/obdobriel> *
 *                                 *
 ***********************************/

/**
 * cli模式
 *
 * 在php cli模式下运行框架运行框架
 */

/**
 * 命令行参数list
 */
$help = function () {
    $string =  <<<HELP
    \033[36m Cli Usage \033[0m:
        php cli --env=<environment> --method=<value> --<arguments>=<value> ...

    \033[36m Example \033[0m:
        php cli --method=demo.index.get --username=test

    \033[36m Params mean \033[0m:
        \033[33m env \033[0m:          Script run environment
        \033[33m method \033[0m:       The function will running, value format <module.controller.action>
        \033[33m arguments \033[0m:    Input arguments
        \033[33m help      \033[0m:    Display command list

     \033[36m Web Server Usage \033[0m:
        step 1: cd public
        step 2: php -S <addr>:<port>

        For example, php -S 'localhost:666', after that open website 'http://localhost:666/'

    \033[32mEasy PHP: A lightweight PHP framework for studying. Version 0.6.6\033[0m

    \033[32mAuthor  : Gabriel <https://github.com/obdobriel>\033[0m
    \n
HELP;

    die($string);
};

/**
 * 获取参数
 */
if (count($argv) === 1) {
    $help();
}
$input = [];
foreach ($argv as $v) {
    preg_match_all('/^--(.*)/', $v, $match);
    if (isset($match[1][0]) && ! empty($match[1][0])) {
        $match = explode('=', $match[1][0]);
        if ($match[0] === 'help') {
            $help();
        }
        if (isset($match[1])) {
            $input[$match[0]] = $match[1];
        }
    }
}

// 设置cli模式
putenv('IS_CLI=yes');
$method              = $input['method'];
$method              = explode('.', $method);
$input['module']     = $method[0];
$input['controller'] = $method[1];
$input['action']     = $method[2];
unset($input['method']);
$_REQUEST['argv'] = $input;

// 载入框架运行文件
require('framework/run.php');
